{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAyBA,SAASC,EAAcC,G,IAAEC,EAAFD,EAAEC,EAAGC,EAALF,EAAKE,MACpBC,EAAgBC,KAAKC,SAAW,GAWtC,OAVc,IAAIC,SAAQ,SAACC,EAASC,GAClCC,YAAW,WACTC,QAAQC,IAAIT,GACRC,EACFI,EAAQ,CAAEN,IAAGC,UAEbM,EAAO,CAAEP,IAAGC,S,GAEbA,E,IAjCMU,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAMC,iBACN,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYC,EAAKH,EAALf,MAAOmB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAE3BA,EAASC,OAAOD,EAAOE,OACvBJ,EAAQG,OAAOH,EAAMI,OACrBH,EAAOE,OAAOF,EAAKG,OACnB,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAQG,GAAK,EAC/B1B,EAAc,CAAEE,EAAAwB,EAAGvB,MAAAkB,IAChBM,MAAK,SAAA1B,G,IAAGC,EAACD,EAADC,EAAGC,EAAKF,EAALE,MACVyB,EAAA9B,GAAS+B,OAAOC,QAAQ,qBAAiCC,OAAZ7B,EAAI,EAAE,QAAY6B,OAAN5B,EAAM,M,IAEhE6B,OAAM,SAAA/B,G,IAAGC,EAACD,EAADC,EAAGC,EAAKF,EAALE,MACXyB,EAAA9B,GAAS+B,OAAOI,QAAQ,oBAAgCF,OAAZ7B,EAAI,EAAE,QAAY6B,OAAN5B,EAAM,M,IAElEkB,GAASC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  let {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n  amount = Number(amount.value);\n  delay = Number(delay.value);\n  step = Number(step.value);\n  for (let i = 0; i < amount; i += 1) {\n    createPromise({ i, delay })\n      .then(({ i, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${i + 1} in ${delay}ms`);\n      })\n      .catch(({ i, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${i + 1} in ${delay}ms`);\n      });\n    delay += step;\n  }\n}\n\nfunction createPromise({ i, delay }) {\n  const shouldResolve = Math.random() > 0.3;\n  let promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      console.log(delay);\n      if (shouldResolve) {\n        resolve({ i, delay });\n      } else {\n        reject({ i, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","param","i","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","console","log","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","step","amount","Number","value","i1","then","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.775a6294.js.map"}