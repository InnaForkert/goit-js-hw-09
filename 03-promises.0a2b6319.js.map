{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAQC,SAASC,cAAc,qBAC/BC,EAAOF,SAASC,cAAc,oBAC9BE,EAASH,SAASC,cAAc,sBAChCG,EAAOJ,SAASC,cAAc,SACpC,IACII,EACAC,EACAC,EACAC,EAJAC,EAAW,EAQf,SAASC,IACeC,KAAKC,SAAW,GAEpCC,EAAAhB,GAASiB,OAAOC,QAAQ,qBAAqBN,QAAeH,OAE5DO,EAAAhB,GAASiB,OAAOE,QAAQ,oBAAoBP,QAAeH,OAE7DG,GAAY,EACZH,GAAYC,EACRE,EAAWD,IACbS,cAAcZ,GACdI,EAAW,E,CAbfL,EAAKc,iBAAiB,UAiBtB,SAAuBC,GAWnB,OAVFb,EAAWc,OAAOrB,EAAMsB,OACxBd,EAAUa,OAAOlB,EAAKmB,OACtBb,EAAYY,OAAOjB,EAAOkB,OAC1BF,EAAMG,iBACQ,IAAIC,SAAQ,CAACC,EAASC,KAClCC,YAAW,KACXrB,EAAkBsB,YAAYjB,EAAgBH,GAC9CG,GAAgB,GACbJ,EAAS,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delay = document.querySelector('input[name=delay]');\nconst step = document.querySelector('input[name=step]');\nconst amount = document.querySelector('input[name=amount]');\nconst form = document.querySelector('.form');\nlet position = 1;\nlet promiseInterval;\nlet delayVal;\nlet stepVal;\nlet amountVal;\n\nform.addEventListener('submit', createPromise);\n\nfunction resolvePromise() {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    Notiflix.Notify.success(`Fulfilled promise ${position} in ${delayVal}ms`);\n  } else {\n    Notiflix.Notify.failure(`Rejected promise ${position} in ${delayVal}ms`);\n  }\n  position += 1;\n  delayVal += stepVal;\n  if (position > amountVal) {\n    clearInterval(promiseInterval);\n    position = 1;\n  }\n}\n\nfunction createPromise(event) {\n  delayVal = Number(delay.value);\n  stepVal = Number(step.value);\n  amountVal = Number(amount.value);\n  event.preventDefault();\n  let promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n    promiseInterval = setInterval(resolvePromise, stepVal);\n    resolvePromise();\n    }, delayVal);\n  })\n    return promise;\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$delay","document","querySelector","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$form","$47d4ff9957288465$var$promiseInterval","$47d4ff9957288465$var$delayVal","$47d4ff9957288465$var$stepVal","$47d4ff9957288465$var$amountVal","$47d4ff9957288465$var$position","$47d4ff9957288465$var$resolvePromise","Math","random","$parcel$interopDefault","Notify","success","failure","clearInterval","addEventListener","event","Number","value","preventDefault","Promise","resolve","reject","setTimeout","setInterval"],"version":3,"file":"03-promises.0a2b6319.js.map"}